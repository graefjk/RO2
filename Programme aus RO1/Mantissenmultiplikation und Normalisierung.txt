fetch s0, 00 ;  save the value on the adress 0 of the RAM in s0
fetch s1, 01 ;  save the value on the adress 0 of the RAM in s1
add s2, 0F  ; s2= 00001111
add s3, 0F  ; s3= 00001111
and s2, s0  ; save the four  LSBs into s2
and s3, s1  ; save the four  LSBs into s3
or s2,10 ; s2= 0001 four most LSB of s0=number1
or s3, 10 ; s3= 0001 four most LSB of s1=number2  


load s4, 01                ;s4= s2[0]* s3    (000(s2[0]* s3[4-0]))
and s4, s2
compare s4,00
  jump Z, continue1
load s4, s3

continue1:                 ; s5= s[1]* s3 (000(s2[1]* s3[4-0] ))
  load s5, 02
  and s5, s2
  compare s5,00
    jump Z, continue2
  load s5, s3
  sl0 s5                       ; s5= (00(s2[0]* s3[4-0] )0)


continue2:                   ; s6= s[2]* s3 (000(s2[2]* s3[4-0] ))
  load s6, 04
  and s6, s2
  compare s6,00
    jump Z, continue3
  load s6, s3
  sl0 s6
  sl0 s6                      ; s6 = (0(s2[2]* s3[4-0] )00)

continue3:                    ; s7= s[3]* s3 (000(s2[3]* s3[4-0] ))
  load s7, 08
  and s7, s2
  compare s7,00
    jump Z, continue4
  load s7, s3
  sl0 s7
  sl0 s7
  sl0 s7                      ; s7 = ((s2[3]* s3[4-0] )000)

continue4:
  load s8, s3          ;s8= s3
  sl0 s8
  sl0 s8
  sl0 s8
  sl0 s8                       ; s8 = s3[3-0]0000
  load s9, 01                  ; s9 = 00000001= s3[4]

add s4, s5                     ; s4=s4+s5
add s4, s6                     ; s4= s4+s6
add s4, s7                     ; s4= s4+s7
addcy s9, 00                   ; s9= s9+carry
add s4, s8                     ; s4= s4+s8
addcy s9, 00                   ; s9= s9+carry


load s5, 02                    ; s5=00000010
and s5, s9                     ; s5= s5 & s9
compare s5, 01                 ; check if s5 is equal to 1 if it is it jump to save 
 jump Z, save

add sF, s4
sr0 sF
sr0 sF
sr0 sF
sr0 sF
jump finish                 ; if s5=0 then ignore the 1 saved in s9 (1. in normal-form) 
                            ;  and save the first 4 bits after the comma sF=result =0000s4[7-4] 
                            ; and jump to the finish after that

save:
 load s6, 01
 and s6, s9
 add sF, s6             
 sl0 sF
 sl0 sF
 sl0 sF    ;ignore the second LSB in s9 and save the first bit of s9 into the fourth bit of sF(result) 
               ; sF=0000s9[0]000
 sr0 s4
 sr0 s4
 sr0 s4
 sr0 s4
 sr0 s4         ; s4= 00000s4[7-5]

 add sF, s4  ; sF= 000S9[0]s4[7-5]

finish:
return    ; end the procces

